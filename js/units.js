// D√©finition de toutes les unit√©s du jeu
const UNITS = {
    // Unit√©s de base
    ep√©iste: {
        name: '√âp√©iste',
        type: ['Corps √† corps', 'Physique'],
        damage: 5,
        multiplier: 2,
        icon: '‚öîÔ∏è',
        rarity: 'common',
        description: 'Unit√© de base √©quilibr√©e'
    },
    
    archer: {
        name: 'Archer',
        type: ['Distance', 'Physique'],
        damage: 4,
        multiplier: 3,
        icon: 'üèπ',
        rarity: 'common',
        description: 'Attaque √† distance avec pr√©cision'
    },
    
    magicienRouge: {
        name: 'Magicien Rouge',
        type: ['Distance', 'Magique'],
        damage: 6,
        multiplier: 2,
        icon: 'üî¥',
        rarity: 'uncommon',
        description: 'Magie de feu destructrice'
    },
    
    magicienBleu: {
        name: 'Magicien Bleu',
        type: ['Corps √† corps', 'Magique'],
        damage: 3,
        multiplier: 4,
        icon: 'üîµ',
        rarity: 'uncommon',
        description: 'Magie de glace avec multiplicateur √©lev√©'
    },
    
    lancier: {
        name: 'Lancier',
        type: ['Corps √† corps', 'Physique'],
        damage: 4,
        multiplier: 3,
        icon: 'üî±',
        rarity: 'common',
        description: 'Attaque avec une lance'
    },
    
    Paysan: {
        name: 'Paysan',
        type: ['Corps √† corps', 'Physique'],
        damage: 2,
        multiplier: 1,
        icon: 'üë®‚Äçüåæ',
        rarity: 'common',
        description: 'Paysan arm√©s de fourches et d\'outils'
    },
    
    barbare: {
        name: 'Barbare',
        type: ['Corps √† corps', 'Physique'],
        damage: 7,
        multiplier: 1,
        icon: 'ü™ì',
        rarity: 'uncommon',
        description: 'D√©g√¢ts √©lev√©s, multiplicateur faible'
    },
    
    viking: {
        name: 'Viking',
        type: ['Corps √† corps', 'Physique'],
        damage: 6,
        multiplier: 2,
        icon: 'üõ°Ô∏è',
        rarity: 'uncommon',
        description: 'Guerrier nordique robuste'
    },
    
    fronde: {
        name: 'Fronde',
        type: ['Distance', 'Physique'],
        damage: 2,
        multiplier: 5,
        icon: 'ü™®',
        rarity: 'rare',
        description: 'Multiplicateur tr√®s √©lev√©'
    },

    // Unit√©s sp√©ciales
    paladin: {
        name: 'Paladin',
        type: ['Corps √† corps', 'Physique'],
        damage: 8,
        multiplier: 2,
        icon: '‚öúÔ∏è',
        rarity: 'rare',
        description: 'Guerrier sacr√© puissant'
    },
    
    assassin: {
        name: 'Assassin',
        type: ['Corps √† corps', 'Physique'],
        damage: 3,
        multiplier: 6,
        icon: 'üó°Ô∏è',
        rarity: 'rare',
        description: 'Attaques critiques d√©vastatrices'
    },
    
    mage: {
        name: 'Mage',
        type: ['Distance', 'Magique'],
        damage: 5,
        multiplier: 4,
        icon: 'üîÆ',
        rarity: 'rare',
        description: 'Magie pure et puissante'
    },
    
    chevalier: {
        name: 'Chevalier',
        type: ['Corps √† corps', 'Physique'],
        damage: 9,
        multiplier: 1,
        icon: 'üêé',
        rarity: 'epic',
        description: 'D√©fenseur d\'√©lite'
    },
    
    arbal√©trier: {
        name: 'Arbal√©trier',
        type: ['Distance', 'Physique'],
        damage: 8,
        multiplier: 2,
        icon: 'üéØ',
        rarity: 'epic',
        description: 'Arbal√®te de pr√©cision'
    },
    
    sorcier: {
        name: 'Sorcier',
        type: ['Distance', 'Magique'],
        damage: 4,
        multiplier: 5,
        icon: 'üßô‚Äç‚ôÇÔ∏è',
        rarity: 'epic',
        description: 'Magie ancienne et myst√©rieuse'
    },
    
    berserker: {
        name: 'Berserker',
        type: ['Corps √† corps', 'Physique'],
        damage: 10,
        multiplier: 1,
        icon: 'üò§',
        rarity: 'epic',
        description: 'Rage de combat maximale'
    },
    
    archerElite: {
        name: 'Archer d\'√âlite',
        type: ['Distance', 'Physique'],
        damage: 6,
        multiplier: 4,
        icon: 'üéñÔ∏è',
        rarity: 'legendary',
        description: 'Archer d\'exception'
    },
    
    mageSupreme: {
        name: 'Mage Supr√™me',
        type: ['Distance', 'Magique', 'Corps √† corps'],
        damage: 7,
        multiplier: 5,
        icon: 'üëë',
        rarity: 'legendary',
        description: 'Ma√Ætre de la magie'
    },
    
    champion: {
        name: 'Champion',
        type: ['Corps √† corps', 'Physique', 'Magique'],
        damage: 12,
        multiplier: 2,
        icon: 'üèÜ',
        rarity: 'legendary',
        description: 'Le plus puissant des guerriers'
    }
};

// Fonction pour obtenir une unit√© al√©atoire selon la raret√©
function getRandomUnit(rank = 'F-') {
    const rankIndex = GameState.RANKS.indexOf(rank);
    
    // D√©finir les probabilit√©s selon le rang
    let commonChance = 0.6;
    let uncommonChance = 0.3;
    let rareChance = 0.08;
    let epicChance = 0.015;
    let legendaryChance = 0.005;
    
    // Augmenter les chances de raret√© avec le rang
    if (rankIndex > 5) { // Apr√®s E+
        commonChance -= 0.1;
        uncommonChance += 0.05;
        rareChance += 0.03;
        epicChance += 0.015;
        legendaryChance += 0.005;
    }
    
    if (rankIndex > 10) { // Apr√®s C+
        commonChance -= 0.1;
        uncommonChance -= 0.05;
        rareChance += 0.1;
        epicChance += 0.03;
        legendaryChance += 0.02;
    }
    
    if (rankIndex > 15) { // Apr√®s A+
        commonChance = 0.3;
        uncommonChance = 0.3;
        rareChance = 0.25;
        epicChance = 0.1;
        legendaryChance = 0.05;
    }
    
    const rand = Math.random();
    let targetRarity;
    
    if (rand < commonChance) targetRarity = 'common';
    else if (rand < commonChance + uncommonChance) targetRarity = 'uncommon';
    else if (rand < commonChance + uncommonChance + rareChance) targetRarity = 'rare';
    else if (rand < commonChance + uncommonChance + rareChance + epicChance) targetRarity = 'epic';
    else targetRarity = 'legendary';
    
    // Filtrer les unit√©s par raret√©
    const unitsOfRarity = Object.values(UNITS).filter(unit => unit.rarity === targetRarity);
    
    if (unitsOfRarity.length === 0) {
        // Fallback vers les unit√©s communes
        return Object.values(UNITS).filter(unit => unit.rarity === 'common')[0];
    }
    
    return unitsOfRarity[Math.floor(Math.random() * unitsOfRarity.length)];
}

// Fonction pour obtenir plusieurs unit√©s al√©atoires
function getRandomUnits(count, rank = 'F-') {
    const units = [];
    for (let i = 0; i < count; i++) {
        units.push(getRandomUnit(rank));
    }
    return units;
}



// Fonction pour obtenir le co√ªt de recrutement selon la raret√©
function getRecruitCost(rarity) {
    const costs = {
        common: 50,
        uncommon: 75,
        rare: 125,
        epic: 200,
        legendary: 350
    };
    return costs[rarity] || 50;
} 